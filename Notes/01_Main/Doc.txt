NOTE: if we are using windows home os that we have to install virtual box and then install windows pro then install docker tool box
=> we have to enable virtualization in pc to use docker tool box VM 

=> While learning this tutorial docker tool box is depricated and the new Docker Desktop version came out

=> Setup:
    -> install Docker Desktop
    -> install Ubuntu (WSL v2) while this tutorial
        -> in Ubuntu terminal:
            -> docker run -d -p 80:80 docker/getting-started
            -> if it says Go permission denied then:
                -> sudo groupadd docker
                -> sudo usermod -aG docker ${USER}
                -> su - ${USER}
                -> docker ps -a (to test)
                -> finally:
                    -> docker run -d -p 80:80 docker/getting-started

-> docker version (in terminal)
    -> Client:
    -> Server:
        -> docker have two componend which are client and server
            -> Client:
                -> from where we are using docker 
            -> Server:
                -> where docker is running

-> docker run hello-world

#) Docker Client and Docker Server
    -> Docker client is a tool we issue commands to for reaching out to docker daemon(docker server)
    -> The Docker doemon is a service that runs on your host operating system. it is responsible for running containers

    -> when we will command:
        -> docker run hello-world
            -> Docker client and server will receive the request and check does 'hello-world' image avilable in the pc if it is avilable it means that, that image had been stored as the cache into the pc and it will get that image and install it from the cache
            -> if it didn't find the image in the cache then it get the image from the free service called docker hub and make a container for that
                -> https://hub.docker.com/

-> docker run busybox
    -> it will install the image
        -> docker run busybox echo hello roman
            -> <docker run busybox> => run busybox image and create a container
            -> <echo hello roman> => and the startup command of that container run it by 'hello roman'

        -> docker run busybox ping youtube.com
        -> docker run busybox ls
            -> will who us the folder inside the busybox
        -> docker run busybox sh
            -> it will run the shell and come out of that shell

*) Command
        -> docker create hello-world (this will create a 'hello-world' container)


    -> docker run -it alpine sh
        -> apk add --update redis (we can run the command that we had created inside the shell)
        -> docker commit -c 'CMD "redis-server"' <alpine image container id> (this says that, commit inside the container with startup command 'redis-server')
            -> it means that what every is running in this container make a file system snapshot of that and then start the container with the given startup command
            -> then we will get the container id:
                -> docker run <Container ID>