FROM base

# In the shell form you can use a \ (backslash) to continue a single RUN instruction onto the next line. For example, consider these two lines:
RUN /bin/bash -c 'source $HOME/.bashrc && \
echo $HOME'

# Together they are equivalent to this single line:
RUN /bin/bash -c 'source $HOME/.bashrc && echo $HOME'

# To use a different shell, other than '/bin/sh', use the exec form passing in the desired shell. For example:
RUN ["/bin/bash", "-c", "echo hello"]
# The exec form is parsed as a JSON array, which means that you must use double-quotes (") around words not single-quotes (').

# Unlike the shell form, the exec form does not invoke a command shell. This means that normal shell processing does not happen. For example, 'RUN [ "echo", "$HOME" ]'' will not do variable substitution on '$HOME'. If you want shell processing then either use the shell form or execute a shell directly, for example: 'RUN [ "sh", "-c", "echo $HOME" ]''. When using the exec form and executing a shell directly, as in the case for the shell form, it is the shell that is doing the environment variable expansion, not docker.

# In the JSON form, it is necessary to escape backslashes. This is particularly relevant on Windows where the backslash is the path separator. The following line would otherwise be treated as shell form due to not being valid JSON, and fail in an unexpected way:
RUN ["c:\\windows\\system32\\tasklist.exe"] 