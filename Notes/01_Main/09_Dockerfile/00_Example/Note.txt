*) Dockerfile
    -> https://docs.docker.com/engine/reference/builder/
    -> using this we will build our own docker image for our project.
    -> EX: 
        -> In this './01_Dockerfile.png' diagram we can see that, we have developed the javascript application, we have used the mongodb container now it is time to commit to git.
        -> So we will simulate this steps in local environment
        -> After commit you have CI that run it could be using 'Jenkins' or Github action.
        -> So what doesn't Jenkins do in this application:
            -> So when it build the application
            -> it packages them in the docker image 
            -> and then push is to docker Repository
        -> So here we will simulate what Jenkins does with our application and how it packages into a Docker image on local environment.

    *) What is Dockerfile:
        -> In order to build and docker image from an application we have to copy the content of the application on the docker files, it could be an artifact that we build and then we will going to configure it in order to do that we will going to use Bluprint for buildig Images which is called as a Dockerfile.
        -> So, Dockerfile is the blueprint for creating Docker Images.
        -> Here is the format of the Dockerfile:
            # Comment
            INSTRUCTION arguments


*) Setup Project:
    -> './03_Process_of_Dockerfile_to_Repository.PNG'
    -> For the Project example we have used the previous done Demo project on '../../07_Demo_Project' and build the image of our own nodejs project.
    -> So for that we will going to create the Image on './Dockerfile' 
        -> docker build -t my-app:1.0 .
    -> After that we will going to commit the Project/App including Dockerfile in git.
    -> After commit we will simulate the Jenkins server as well.
        -> So, Jenkins takes the Dockerfile and build the Docker Image from Dockerfile (like we did)
    -> So after it build the image we will share the image so that other developer on you team can also be able to use it for that we will going to push the Image on Docker Repository
    -> After that some other developer can pull the Image from the Repository or development server can actually pull from there as well.
    -> So, Because we have already created the 'mongo' & 'mongo-express' container in '../../07_Demo_Project' project.
    -> Where we will create container of our own Custom Image that we build from './Dockerfile'
        -> docker run my-app:1.0
    
