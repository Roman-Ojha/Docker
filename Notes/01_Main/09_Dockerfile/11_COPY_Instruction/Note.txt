*) COPY Instruction:
    -> https://docs.docker.com/engine/reference/builder/#copy
    -> COPY [--chown=<user>:<group>] [--chmod=<perms>] <src>... <dest>
    -> COPY [--chown=<user>:<group>] [--chmod=<perms>] ["<src>",... "<dest>"]
    -> The COPY instruction copies new files or directories from <src> and adds them to the filesystem of the container at the path <dest>.
    -> Multiple <src> resources may be specified but the paths of files and directories will be interpreted as relative to the source of the context of the build.
    -> 'COPY' obeys the following rules:
        -> The <src> path must be inside the context of the build; you cannot 'COPY ../something /something', because the first step of a 'docker build' is to send the context directory (and subdirectories) to the docker daemon.
        -> If <src> is a directory, the entire contents of the directory are copied, including filesystem metadata.
        -> If <src> is any other kind of file, it is copied individually along with its metadata. In this case, if <dest> ends with a trailing slash /, it will be considered a directory and the contents of <src> will be written at <dest>/base(<src>).
        -> If multiple <src> resources are specified, either directly or due to the use of a wildcard, then <dest> must be a directory, and it must end with a slash /.
        -> If <dest> does not end with a trailing slash, it will be considered a regular file and the contents of <src> will be written at <dest>.
        -> If <dest> doesn't exist, it is created along with all missing directories in its path.
        

*) COPY --link
    -> https://docs.docker.com/engine/reference/builder/#copy---link